generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id       String    @id @default(uuid())
  name     String
  students User[]
  profiles Profile[]
}

model Profile {
  id       String    @id @default(uuid())
  name     String
  school   School?   @relation(fields: [schoolId], references: [id])
  schoolId String?
  subject  Subject[]
  User     User[]
}

model User {
  id           String         @id @default(uuid())
  name         String
  phone_number String?        @unique
  discordId    String?        @unique
  googleId     String?        @unique
  facebookId   String?        @unique
  grade        Grade
  school       School         @relation(fields: [schoolId], references: [id])
  schoolId     String
  books        BookInstance[]
  profile      Profile        @relation(fields: [profileId], references: [id])
  profileId    String
}

model Book {
  id          String         @id @default(uuid())
  title       String
  author      String
  price       Decimal
  image       String
  grade       Grade
  subject     Subject        @relation(fields: [subjectName], references: [name])
  subjectName String
  isAdvanced  Boolean
  url         String
  instances   BookInstance[]
}

model BookInstance {
  id        String    @id @default(uuid())
  status    String
  bookId    String
  book      Book      @relation(fields: [bookId], references: [id])
  ownerId   String
  owner     User      @relation(fields: [ownerId], references: [id])
  condition Condition
}

enum Condition {
  NEW
  GOOD
  DAMAGED
  BAD
}

enum Grade {
  FIRST
  SECOND
  THIRD
  FOURTH
}

model Subject {
  name     String    @id @unique
  alias    String?   @unique
  Book     Book[]
  profiles Profile[]
}
