generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  name         String
  phone_number String?      @unique
  discord_id   String?      @unique
  google_id    String?      @unique
  facebook_id  String?      @unique
  books        BookCopy[]
  cart         BookInCart[]
}

model Book {
  id          String              @id @default(uuid())
  title       String
  author      String
  price       Int
  image       String
  grade       Grade
  subject     Subject
  is_advanced Boolean
  url         String
  books       BookWithCondition[]
}

model BookWithCondition {
  book_id   String
  condition Condition
  book      Book         @relation(fields: [book_id], references: [id])
  copies    BookCopy[]
  carts     BookInCart[]

  @@id([book_id, condition])
}

model BookInCart {
  user_id             String
  book_id             String
  condition           Condition
  book_with_condition BookWithCondition @relation(fields: [book_id, condition], references: [book_id, condition])
  user                User              @relation(fields: [user_id], references: [id])

  @@unique([book_id, user_id])
}

model BookCopy {
  id                  String            @id @default(uuid())
  owner_id            String
  status              String
  book_id             String
  condition           Condition
  book_with_condition BookWithCondition @relation(fields: [book_id, condition], references: [book_id, condition])
  owner               User              @relation(fields: [owner_id], references: [id])
}

enum Condition {
  NEW
  GOOD
  DAMAGED
  BAD
}

enum Grade {
  FIRST
  SECOND
  THIRD
  FOURTH
}

enum Subject {
  MATH
  ENGLISH
  POLISH
  GERMAN
  RUSSIAN
  HISTORY
  CIVICS
  CHEMISTRY
  BIOLOGY
  GEOGRAPHY
  PHYSICS
  COMPUTER_SCIENCE
  ENTREPRENEURSHIP
  EDUCATION_FOR_SAFETY
}
